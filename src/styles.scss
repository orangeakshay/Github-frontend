@font-face {
  font-family: futuraregular;
  src: url('assets/fonts/futura/futura-medium-bt.ttf') format("truetype");
}

@font-face {
  font-family: futurabold;
  src: url('assets/fonts/futura/futura-heavy.ttf') format("truetype");
}

body{
  margin:0;
  font-family:futuraregular
}

::ng-deep .mat-form-field {
  font-size: 12px; // example
}
.w-100,.mat-form-field{
  width:100%
}
.h-100{
  height:100%;
}
.inline-block {
  display: inline-block;
}
.mat-raised-button.mat-primary{
  color:white;
}

.text-center{
  text-align: center;
}
.left-table{
  thead{
    background:#4b9372;
    th{
      color:white;
    }
  }
  height: calc(100% - 255px);
}
.member-table{
  thead{
    th{
      color:white;
    }

  }
  height: calc(100% - 255px);
}


.word-search-section{
  background:#e4e4e4;
  span{
    font-size: 0.8rem;
  }
}


.left-box{
  padding-right: 10px;
  box-shadow: 10px 10px 8px 10px #FAF5EE;
  .mat-row:nth-child(odd){
    background-color: #d3d3d3;
  }
  .mat-row,td{
    border-bottom-color:transparent;
  }
  td{
    color: #003518;
  }
}
.member-table{
  .mat-row:nth-child(odd){
    background-color: #f8f7f9;
  }
  .mat-row,td{
    border-bottom-color:transparent;
  }
}
.member-box{
  box-shadow: 10px 10px 8px 10px #888888;
}

.circle-icon {
  background: #D8D8D6;
  padding: 12px;
  border-radius: 50%;
  margin: 6px;
  color: #003518;
}
.mat-form-field-appearance-outline .mat-form-field-outline {
  color: transparent;
}
.mat-form-field-appearance-outline .mat-form-field-infix {
  padding: .65em 0;
}

.mat-form-field-label-wrapper {
  top: -1.2em;
}


html,body{
  height:100%;
}

.text-white{
  color:white
}

.material-cust-medium-button {
  width: 130px;
  height: 50px;
}
.login-btn-wrapper{
  height:0 ;
  min-height: 0;
  .mat-raised-button{
    height:100px;
    width:200px;
  }
}

.mat-option-text{
  display: contents !important;
}

.mat-select-value{
  overflow:unset !important;
  display: contents !important;
}
.custom-primary,.close-button{
  box-sizing: border-box;
  position: relative;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  cursor: pointer;
  outline: none;
  border: none;
  -webkit-tap-highlight-color: transparent;
  display: inline-block;
  white-space: nowrap;
  text-decoration: none;
  vertical-align: baseline;
  text-align: center;
  margin: 0;
  min-width: 64px;
  line-height: 36px;
  padding: 0 16px;
  border-radius: 4px;
  overflow: visible;
  transform: translate3d(0, 0, 0);
  transition: background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);cursor: pointer;background: #3f51b5;
  box-shadow: 0 3px 1px -2px rgb(0 0 0 / 20%), 0 2px 2px 0 rgb(0 0 0 / 14%), 0 1px 5px 0 rgb(0 0 0 / 12%);
}
.close-button{
  background: #212121;
}
.cdk-overlay-pane.my-dialog {
  position: relative!important;
}
.close.mat-button {
  position: absolute;
  top: 0;
  right: 0;
  padding: 5px;
  line-height: 14px;
  min-width: auto;
}
@import url('https://fonts.googleapis.com/css?family=Dosis');

:root {
  /* generic */
  --gutterSm: 0.4rem;
  --gutterMd: 0.8rem;
  --gutterLg: 1.6rem;
  --gutterXl: 2.4rem;
  --gutterXx: 7.2rem;
  --colorPrimary400: #7e57c2;
  --colorPrimary600: #5e35b1;
  --colorPrimary800: #4527a0;
  --fontFamily: "Dosis", sans-serif;
  --fontSizeSm: 1.2rem;
  --fontSizeMd: 1.6rem;
  --fontSizeLg: 2.1rem;
  --fontSizeXl: 2.8rem;
  --fontSizeXx: 3.6rem;
  --lineHeightSm: 1.1;
  --lineHeightMd: 1.8;
  --transitionDuration: 300ms;
  --transitionTF: cubic-bezier(0.645, 0.045, 0.355, 1);

  /* floated labels */
  --inputPaddingV: var(--gutterMd);
  --inputPaddingH: var(--gutterLg);
  --inputFontSize: var(--fontSizeLg);
  --inputLineHeight: var(--lineHeightMd);
  --labelScaleFactor: 0.8;
  --labelDefaultPosY: 50%;
  --labelTransformedPosY: calc(
          (var(--labelDefaultPosY)) -
          (var(--inputPaddingV) * var(--labelScaleFactor)) -
          (var(--inputFontSize) * var(--inputLineHeight))
  );
  --inputTransitionDuration: var(--transitionDuration);
  --inputTransitionTF: var(--transitionTF);
}

*,
*::before,
*::after {
  box-sizing: border-box;
}

html {
  font-size: 10px;
}

body {
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
  width: 100vw;
  height: 100vh;
  color: #455A64;
  background-color: #7E57C2;
  font-family: var(--fontFamily);
  font-size: var(--fontSizeMd);
  line-height: var(--lineHeightMd);
}

.Wrapper {
  flex: 0 0 80%;
  max-width: 80%;
}

.Title {
  margin: 0 0 var(--gutterXx) 0;
  padding: 0;
  color: #fff;
  font-size: var(--fontSizeXx);
  font-weight: 400;
  line-height: var(--lineHeightSm);
  text-align: center;
  text-shadow: -0.1rem 0.1rem 0.2rem var(--colorPrimary800);
}

.Input {
  position: relative;
}

.Input-text {
  display: block;
  margin: 0;
  padding: var(--inputPaddingV) var(--inputPaddingH);
  color: inherit;
  width: 100%;
  font-family: inherit;
  font-size: var(--inputFontSize);
  font-weight: inherit;
  line-height: var(--inputLineHeight);
  border: none;
  border-radius: 0.4rem;
  transition: box-shadow var(--transitionDuration);
}

.Input-text::placeholder {
  color: #B0BEC5;
}

.Input-text:focus,.Input-text {
  outline: none;
  box-shadow: 0.2rem 0.8rem 1.6rem var(--colorPrimary600);
}

.Input-label {
  /*display: block;
  position: absolute;
  bottom: 50%;*/
  left: 1rem;
  color: black;
  font-family: inherit;
  font-size: var(--inputFontSize);
  font-weight: inherit;
  line-height: var(--inputLineHeight);
  transform:
          translate3d(0, var(--labelDefaultPosY), 0)
          scale(1);
  transform-origin: 0 0;
  transition:
          opacity var(--inputTransitionDuration) var(--inputTransitionTF),
          transform var(--inputTransitionDuration) var(--inputTransitionTF),
          visibility 0ms var(--inputTransitionDuration) var(--inputTransitionTF),
          z-index 0ms var(--inputTransitionDuration) var(--inputTransitionTF);
}

.Input-text:placeholder-shown + .Input-label {
  visibility: hidden;
  z-index: -1;
}

.Input-text:not(:placeholder-shown) + .Input-label,
.Input-text:focus:not(:placeholder-shown) + .Input-label {
  visibility: visible;
  z-index: 1;
  opacity: 1;
  transform:
          translate3d(0, var(--labelTransformedPosY), 0)
          scale(var(--labelScaleFactor));
  transition:
          transform var(--inputTransitionDuration),
          visibility 0ms,
          z-index 0ms;
}
.mat-dialog-content {
  max-height: 800px !important;
}
